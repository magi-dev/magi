# Copyright (C) 2009-2012 The Bitcoin Core Developers
# Copyright (C) 2012-2014 The PPCoin Developers
# Copyright (C) 2014 The Magi Core Developers
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

CXX ?= x86_64-w64-mingw32-g++

USE_UPNP:=-
USE_IPV6:=1

#DEPSDIR?=/usr/local
BOOST_SUFFIX?=-mt-s
BOOST_THREAD_LIB_SUFFIX=_win32-mt-s

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"../depends/x86_64-w64-mingw32/include/boost" \
 -I"../depends/x86_64-w64-mingw32/include" \
 -I"../depends/x86_64-w64-mingw32/include/miniupnpc" \
 -I"../depends/x86_64-w64-mingw32/include" \
 -I"../depends/x86_64-w64-mingw32/include/openssl"

LIBPATHS= \
 -L"$(CURDIR)/leveldb" \
 -L"../depends/x86_64-w64-mingw32/lib" \
 -L"../depends/x86_64-w64-mingw32/lib" \
 -L"../depends/x86_64-w64-mingw32/lib" \
 -L"../depends/x86_64-w64-mingw32/lib" \
 -L"../depends/x86_64-w64-mingw32/lib"
 
LIBS= \
 -l leveldb \
 -l memenv \
 -l boost_system$(BOOST_SUFFIX) \
 -l boost_filesystem$(BOOST_SUFFIX) \
 -l boost_program_options$(BOOST_SUFFIX) \
 -l boost_thread$(BOOST_THREAD_LIB_SUFFIX) \
 -l boost_chrono$(BOOST_SUFFIX) \
 -l db_cxx \
 -l ssl \
 -l gmp \
 -l crypto


DEFS=-D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE -D__NO_SYSTEM_INCLUDES
DEBUGFLAGS=-g
CFLAGS=-mthreads -O2 -msse2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
#FCFLAGS=-O2 -ffree-line-length-none
#LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -static

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"../depends/x86_64-w64-mingw32/include/miniupnpc"
 LIBPATHS += -L"../depends/x86_64-w64-mingw32/lib"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -MINIUPNP_STATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

ifneq (${USE_IPV6}, -)
	DEFS += -DUSE_IPV6=$(USE_IPV6)
endif

LIBS += -l mingwthrd -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/alert.o \
    obj/clientversion.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/keystore.o \
    obj/main.o \
    obj/net.o \
    obj/protocol.o \
    obj/magirpc.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcmining.o \
    obj/rpcwallet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/script.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/noui.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/keccak.o \
    obj/haval.o \
    obj/ripemd.o \
    obj/sha2.o \
    obj/sha2big.o \
    obj/tiger.o \
    obj/whirlpool.o \
    obj/magimath.o \
    obj/txdb.o

all: magid.exe

#test check: test_magi.exe FORCE
#    test_magi.exe

#
# LevelDB support
#
#LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a
DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)

#leveldb/libleveldb.a:
#    cd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT="$(CFLAGS)" TARGET_OS=NATIVE_WINDOWS libleveldb.a libmemenv.a && cd ..

obj/%.o: %.cpp $(HEADERS)
	x86_64-w64-mingw32-g++ -c $(CFLAGS) -o $@ $<

obj/%.o: %.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -fpermissive -o $@ $<

obj/%.o: hash/%.cpp $(HEADERS)
	x86_64-w64-mingw32-g++ -c $(CFLAGS) -o $@ $<

obj/%.o: hash/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -fpermissive -o $@ $<

magid.exe: $(OBJS:obj/%=obj/%)
	x86_64-w64-mingw32-g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))

obj-test/%.o: test/%.cpp $(HEADERS)
	x86_64-w64-mingw32-g++ -c $(TESTDEFS) $(CFLAGS) -o $@ $<

test_magi.exe: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))
	x86_64-w64-mingw32-g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework $(LIBS)

clean:
	-del /Q magid.exe test_magi.exe
	-del /Q obj\*
	-del /Q obj-test\*

FORCE:
